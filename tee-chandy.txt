Module 2 Project

Project Submission

Part 1 - Link url to the completed assignment in CodePen:


              https://codepen.io/tpchandy/pen/QWKNwxE?editors=1100 


Part 2 - Questions with completed answers

    1. What is Semantic HTML? 

Semantic HTML is the use of HTML markup to reinforce the semantics, or meaning, of the information in webpages and web applications rather than merely to define its presentation or look.

    2. What is HTML used for? 

HTML (Hypertext Markup Language)is the standard markup language for documents designed to be displayed in a web browser.HTML helps search engines, screen readers, and other user devices determine the significance and context of web content.

    3. What is an attribute and where do we put it? 

In computing, an attribute is a specification that defines a property of an object, element, or file. ... It may also refer to or set the specific value for a given instance of such. For clarity, attributes should more correctly be considered metadata.

    4. What is the h1 tag used for? How many times should I use it on a page?

The <H1> HTML tag is the first header tag visible on a page. It is used for the title of a page or post. When viewed in HTML code, the H1 value is enclosed in <h1></h1> tags. It is a golden rule that there should be only one <h1> tag on a given page. That is best practice.

    5. Name two tags that have required attributes

The following tags:    <img>  and <a>

    6. What do we put in the head of our HTML document? 

The head of the HTML document contains information such as the page <title> , links to CSS (if you choose to style your HTML content with CSS), links to custom favicon, and other metadata (data about the HTML, such as the author, and important keywords that describe the document.)


    7. What is an id? 

The HTML id attribute is used to specify a unique id for an HTML element.
The id attribute is also used to point to a specific style declaration in a style sheet. It is also used by JavaScript to access and manipulate the element with the specific id.


    8. What elements can I add an id to? 


Id can be added to any element.<ID>s are single use and are only applied to one element... Each is attributed as a Unique Identifier to (only) one single element. Needless to say that any element that requires to be addressed/styled specifically should be tagged with a unique ID.



    9. How many times can I use the same id on a page? 

You may only use the same id once per page, so best practice is to save it for important major sections of your page. 

    10. What is a class? 

The HTML class attribute specifies one or more class names for an element. Classes are used by CSS and JavaScript to select and access specific elements. 
    11. What elements can I add a class to? 

The class attribute can be used on any HTML element. The class name is case sensitive.

    12. How many times can I use the same class on a page? 

Technically there is no limit, but one needs to consider the fact that it does have an impact on the memory the browser may be consuming.


    13. How do I get my link to open in a new tab?

You just need an anchor ( <a> ) element with three important attributes: The href attribute set to the URL of the page you want to link to. The target attribute set to _blank , which tells the browser to open the link in a new tab/window, depending on the browser's settings.


    14. What is the alt attribute in the image tag used for? 

The required alt attribute specifies an alternate text for an image, if the image cannot be displayed. The alt attribute provides alternative information for an image if a user for some reason cannot view it (because of slow connection, an error in the src attribute, or if the user uses a screen reader).

    15. How do I reference an id?

The id of an element is unique within a page, so the id selector is used to select one unique element! To select an element with a specific id, write a hash (#) character, followed by the id of the element.


    16. What is the difference between a section and a div

The <section> tag defines sections in a document, such as chapters, headers, footers, or any other sections of the document. The <div> tag defines a division or a section in an HTML document. The <div> tag is used to group block-elements to format them with CSS.


    17. What is CSS used for? 

CSS is the language for describing the presentation of Web pages, including colors, layout, and fonts. It allows one to adapt the presentation to different types of devices, such as large screens, small screens, or printers.


    18. How to we select an element? Example - every h2 on the page

By the name of that element. If multiple elements need to be selected, each is followed by a comma. In CSS, a class selector is a name preceded by a full stop (“.”) and an ID selector is a name preceded by a hash character (“#”).


    19. What is the difference between a class and an id? - Give me an example of when I might use each one

The difference between an ID and a class is that an ID can be used to identify one element, whereas a class can be used to identify more than one.

If you want to apply an "id" to each paragraph and if you want to follow the standards, you can only do this.
Look how "id" names are not repeated, they are only used once.

        <p id="one">content one</p>
        <p id="two">content two</p>
       <p id="three">content three</p>

However if we want to add the same class to all the 3 paragraphs, it can be done using just that same class ID. This is perfectly acceptable by HTML standards.

       <p class="one">content one</p>
       <p class="one">content two</p>
      <p class="one">content three</p>

 20. How do we select classes in CSS?

To select elements with a specific class, write a period (.) character, followed by the name of the class. You can also specify that only specific HTML elements should be affected by a class. To do this, start with the element name, then write the period (.)


    21. How do we select a p element with a single class of “human””?

                              p.human {---}
    22. What is a parent child selector? When would this be useful? 

The ("parent > child") selector selects all elements that are a direct child of the specified element.


    23. How do you select all links within a div with the class of sidebar?

                          .sidebar { style here}

    24. What is a pseudo selector?

    A CSS pseudo-class is a keyword added to a selector that specifies a special state of the selected element(s). For example, :hover can be used to change a button's color when the user's pointer hovers over it.


    25. What do we use the change the spacing between lines?

               Property : line-height  (line-height:-----;

    26. What do we use to change the spacing between letters?

	Property: letter-spacing ( letter-spacing: ----:
          
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?

   	The CSS text-transform Property : text-transform: capitalize; text-transform: lowercase; and for uppercase - text-transform: uppercase;

    28. How do I add a 1px border around my div that is dotted and black?

.myDiv{
	border: 1px dotted black;
	}




    29. How do I select everything on the page? 

	The * selector selects all elements.   * { property: value}

    30. How do I write a comment in CSS?

	A CSS comment is placed inside the <style> element, and starts with /* and ends with */


    31. How do I find out what file I am in, when I am using the command line? 

	by typing     pwd and enter

	
    32. Using the command line - how do I see a list of files/folders in my current folder?

	type       ls

    33. How do I remove a file via the command line? Why do I have to be careful with this? 

	Navigate to the directory where the file is located, and then type  rm followed by the file name. This will remove that file. This isa permanent deletion where the file is irrecoverably removed and hence need to be done with caution.

    34. Why should I use version control? 

	With a VCS, everybody on the team is able to work absolutely freely - on any file at any time. The VCS will later allow you to merge all the changes into a common version. There's no question where the latest version of a file or the whole project is. It's in a common, central place: your version control system.

Other benefits of using a VCS are even independent of working in a team or on your own.


    35. How often should I commit to github?

	when you add a method, or change something. Best practice is to commit early and often!


    36. What is the command we would use to push our repo up to github? 

	git push -u origin branch-name will push all of your commits from your local machine up onto github


    37. Walk me through Lambda's git flow. 

This is what I am teaching myself to do:
1. Fork a copy of the repo which I must verify has my name and the for symbol on the top left corner of the GitHub page. I will also pick a collaborator( once I am assigned one)
2. Clone the repo using the appropriate button, copying the url, opening up my terminal, and toggling to the directory where I am holding this and 	future git repos on my local computer. Once in that directory, I will use the command :  git clone "<paste the copied link from gitHub> and hit 	enter. This will initiate and complete the clone process.
3. Now I would Cd to the newly acquired repo using the command  cd < name of the new file> and hit enter
4. Next I will create a Branch for this file for my work using the command :  git checkout -b 'firstname-lastname' 
5. Now I will access this new branch of the repo and complete the assigned tasks/assignments .
6. Once my assignment is completed in the branch file/s, I now have to submit those changes into the repo with the command   git add .
7. The next step is to commit my changes by using the command:  git commit -m "Your helpful commit message here" -the message briefly outlines the changes that I have made to the repo now being committed.
8. The next step is to push this committed version from my local computer to  my repo on gitHub. The command will be : git push -u origin branch-name (where the branch name will be the same that I used   when creating the branch for myself.(as in step 4 above).
9. Now that my modified repo is available on GitHub, the next step is to submit a PULL REQUEST. Here I need to ensure the I am completing the PR(Pull Request) on my forked copy and not the Lambda School repo.  Next I  have to click on the BRANCH-MASTER button 				             which will then offer a dropdown to pick my branch name in there.  I will then click on my branch-name, and click on NEW PULL REQUEST 		   button to  make a PR on my branch name . This will then redirect me to the PR page. Once the PR page loads up,  I will make sure to click the 	dropdown button that says base repository and CHANGE it to be my FORKED REPO instead of the original Lambda repo (when 				          submitting PR it will default to the original Repo this is why it needs to be changed). At this point I will complete the details on the PR 	message including adding the reviewer (when assigned).
10. The final step is to click on the button CREATE  PULL REQUEST.This completes my part of pulling and submitting back my assignment which will then be handled by the collaborator/reviewer appropriately before being merged.Once I find the merge is completed, I will delete the branch file on my local machine.
 
Stretch Questions

    1. What is the difference between an inline element and a block element?

	By default, inline elements do not force a new line to begin in the document flow, and their width is limited to the the extend defined by their tags. Block elements, on the other hand, typically cause a line break to occur and extends the full width of the available horizontal space of its parent element.

    2. What happens when an element is positioned absolutely? 

	When an element that is absolutely positioned is taken out of the flow; thus, other elements are positioned as if it did not exist. The absolutely positioned element is positioned relative to its nearest positioned ancestor (i.e., the nearest ancestor that is not static ).


    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 

	The display: inline-block Value


    4. Name 3 elements that are display block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default


	Display block by default: <div>, <section>, <ul>  //. Display inline by default: <span>, ,em>, <b>. //. Display inline-block : <img>, <button>, <select>



    5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them? 


The box model is where there are rules that decide how sizes of elements are computed when we add padding, margins and borders and naturally this creates a problem with the layout when we have already defined the height and width of the contents in an element.

The available fix for this, is  Box -sizing/ Border Box which is used in conjunction with the  CSS.
