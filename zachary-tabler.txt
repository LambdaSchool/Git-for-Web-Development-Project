    1. What is Semantic HTML? Semantic HTML is code that uses descriptive elements to give meaning to the content.
    2. What is HTML used for? Building structure and meaning for content. 
    3. What is an attribute and where do we put it? Attributes are properties that provide additional information about an element. They are placed within the opening tag after the name of the element. 
    4. What is the h1 tag used for? How many times should I use it on a page? An h1 tag is used for a headline. It should only be used once. 
    5. Name two tags that have required attributes - <a> <img>
    6. What do we put in the head of our HTML document? The document title, any metadata, links to external files. The <head> element is not seen on the webpage itself. 
    7. What is an id? They are titles that can appear on only one element. 
    8. What elements can I add an id to? A single element. 
    9. How many times can I use the same id on a page? Just once. 
    10. What is a class? A title that can apply to multiple elements (a class) rather than all the elements of a certain type. 
    11. What elements can I add a class to? Multipe elements. 
    12. How many times can I use the same class on a page? You can use it multiple times. 
    13. How do I get my link to open in a new tab? target="_blank"
    14. What is the alt attribute in the image tag used for? It provides context to the image. It is useful for screen readers, etc. 
    15. How do I reference an id? In CSS? By using the # and the the name. 
    16. What is the difference between a section and a div? The div element can be used when you don't need to assign meaning. The section element is used to identify a thematic group of content. 
    17. What is CSS used for? It is used to style the structure of the content. 
    18. How to we select an element? Example - every h2 on the page hs { }
    19. What is the difference between a class and an id? - Give me an example of when I might use each one - An id attribute can only identify one element. A class attribute can identifty multiple elements. This may be useful if you wanted to make one element stand out from the others you could you an id attribute. Or, if you wanted to change an entire subset, you would use the class attribute. 
    20. How do we select classes in CSS? By using a period or full stop. 
    21. How do we select a p element with a single class of “human””? <p class ="human">
    22. What is a parent child selector? When would this be useful? In list form, it defines the relationship. 
    23. How do you select all links within a div with the class of sidebar? <div class ="sidebar>
    24. What is a pseudo selector? It is designed to style a special part of the element like the first line. 
    25. What do we use the change the spacing between lines? line-height
    26. What do we use to change the spacing between letters? letter-spacing
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize? text-transform. 
    28. How do I add a 1px border around my div that is dotted and black? div { border-style: dotted; border-color: black; border-width: 1px;}
    29. How do I select everything on the page? *< >
    30. How do I write a comment in CSS? They start with /* and end with */. 
    31. How do I find out what file I am in, when I am using the command line? the $ pwd command. 
    32. Using the command line - how do I see a list of files/folders in my current folder? the $ ls command. 
    33. How do I remove a file via the command line? Why do I have to be careful with this? the $ rm command. You want to be careful because there is no confirmation option that you want to delete. Once you execute the command, the file is deleted. 
    34. Why should I use version control? It helps keep a recorded of all the changes that have occurred. 
    35. How often should I commit to github? Whenever you finish a significant change. 
    36. What is the command we would use to push our repo up to github? git push -u origin branch-name
    37. Walk me through Lambda's git flow. 1. Fork it. 2. Clone it. 3. Create a branch. 4. Push your branch. 5. Create a pull request to submit your work. 