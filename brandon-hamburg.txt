https://codepen.io/Brandon-Hamburg/pen/zYoojeW

Questions: 

    1. What is Semantic HTML? 
    ---> The names clearly describes it's content or purpose

    2. What is HTML used for? 
    ---> Markup language used for web page structure

    3. What is an attribute and where do we put it? 
    ---> Describes a specific style color etc. we add them to CSS attribute selectors.

    4. What is the h1 tag used for? How many times should I use it on a page?
    ---> It's for a main heading.  Only one should be on a  page.

    5. Name two tags that have required attributes
    ---><input> <select>

    6. What do we put in the head of our HTML document? 
    --->The link to our css file

    7. What is an id? 
    --->Specific attribute to be used for CSS ID selectors

    8. What elements can I add an id to? 
    ---> Any elements, but ID should unique on the page

    9. How many times can I use the same id on a page?
    --->Once

    10. What is a class? 
    ---> code that can be used by multiple or specific elements

    11. What elements can I add a class to? 
    --->Any

    12. How many times can I use the same class on a page? 
    --->Any amount

    13. How do I get my link to open in a new tab?
    --->In anchor tag add target="_blank"

    14. What is the alt attribute in the image tag used for? 
    --->The text will be displayed if the image cannot be.  It gives alternate info if a user cannot see the full website for some reason

    15. How do I reference an id?
    ---> #

    16. What is the difference between a section and a div
    ---> A section suggests the whole of the section is related.  A div doesn't have to be related

    17. What is CSS used for? 
    ---> For styling websites

    18. How to we select an element? Example - every h2 on the page
    ---> h2 { add stuff }

    19. What is the difference between a class and an id? - Give me an example of when I might use each one
    --->An ID is used for a single thing per page where as a class can be used with any amount of elements.  If I have a unique link, I might use ID.  If I want certain <p> tags styled differently I will use a class

    20. How do we select classes in CSS?
    ---> use .classname { add stuff }

    21. How do we select a p element with a single class of “human””?
    ---> p.human { add stuff }

    22. What is a parent child selector? When would this be useful? 
    --->It allows you to style specific children of a parent.  If you want the first/third  item on each list to be styled in a particular way

    23. How do you select all links within a div with the class of sidebar?
    ---> div.sidebar a

    24. What is a pseudo selector?
    ---> USed to define a special state of an element like :hover

    25. What do we use the change the spacing between lines?
    --->change line-height attribute

    26. What do we use to change the spacing between letters?
    ---> change letter-spacing attribute

    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
    ---> text-transform: uppercase/lowercase/capitalize

    28. How do I add a 1px border around my div that is dotted and black?
    --->div{border 1px dotted black}

    29. How do I select everything on the page? 
    --->use the *

    30. How do I write a comment in CSS?
    --->/* comment /*

    31. How do I find out what file I am in, when I am using the command line? 
    ---> pwd

    32. Using the command line - how do I see a list of files/folders in my current folder?
    --->ls

    33. How do I remove a file via the command line? Why do I have to be careful with this? 
    ---> rm

    34. Why should I use version control? 
    ---> Sending larger files around a bunch of people gets bulky and annoying.  Version control allows many people to work on the same project and it also saves the edits made so you can easily go back to a previous version if you need to.

    35. How often should I commit to github?
    ---> Often as you see fit.

    36. What is the command we would use to push our repo up to github? 
    --->git push -u origin branch-name

    37. Walk me through Lambda's git flow. 
    I'll create a repo or form an existing one.  
    Clone the repo on github, copy the url and use 'git clone "repo link"' while in the proper directory. 
    Then cd into the new cloned directory.  
    git checkout -b "first-last" to create my own branch of the repo
    Work on my project
    along the way use git add "filenames" or . to add the modified files to staging
    git commit -m "Commit message" to commit the changes
    git push -u origin "first-last" to push your files from local to github
    submit a pull request on github


Stretch Review questions: 
1. What is the difference between an inline element and a block element? 

--->A block element always starts on a new line and takes up the full width available.  An inline level element always starts on a new line and only takes the width it needs

2. What happens when an element is positioned absolutely? 

--->The element is placed in a specific position using top/right/bottom/left and will be relative to it's parent element.  It is removed from the flow of the other elements on the page which means the absolute element and other elements will not affect eachother.

3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 

--->You can set display: inline; and increase the left/right padding

4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default 

--->Block: <div> <li> <p>  Inline: <a> <span>   Inline-block: <img>

5. In your own words, explain the box model. What is the fix for the box model?

--->Every HTML element is wrapped around a box which has margins, borders, padding and the content of the element.  The default of box-sizing:content-box isn't great because it adds padding and borders on top of the elements which you already sized.  
box-sizing:border-box will make the padding and borders included in the elements sizing.