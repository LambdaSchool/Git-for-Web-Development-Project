1. What is Semantic HTML? 
    Semantic HTML is when you define parts of a webpage that communicates exactly what the tag does. For example, if I was to use <div>, then the user would not know what the div is doing within HTML. Whereas if I would to use <p> then the user would know that there is a paragraph inside the <p>, </p>.
2. What is HTML used for? 
    HTML is used to create webpages. 
3. What is an attribute and where do we put it? 
    An attribute is words inside the tag to modify the element. For example, in <form>, the action attribute tells us where to send the data within the form.
4. What is the h1 tag used for? How many times should I use it on a page?
    The <h1> is used to show the title of a page. You should only use it once on a page to show the importance of information within the HTML.
5. Name two tags that have required attributes
    Two tags that have required attributes are the <a>, and <font>.   
6. What do we put in the head of our HTML document?
    Inside the head of the HTML you should have, at the very least, the meta tags, title, links to external sheets/styles, and scripts. There is a ton of information that can be used in the <head>, but those are the minimum that one should put.
7. What is an id? 
    An id is the special id for an element. For example, <div id="container"></div>    
8. What elements can I add an id to? 
    You can add an id to any element, but it has to be an id that is different from other id's.
9. How many times can I use the same id on a page? 
    You can only use the same id once on a page. You must make sure the id is different for each element you want differently styled.
10. What is a class? 
    A class is a selector that can style the elements within that class. For example, if I was to use <div class="section1">, then when I use that class in my CSS I would style everything inside that selector.
11. What elements can I add a class to? 
    You can add a class to any element.
12. How many times can I use the same class on a page? 
    You only you the same class on a page once. If you don't then every style you put within that class will go to the element that you put that class on. Just like with id's, what you want styled the same you put the same class/id on. 
13. How do I get my link to open in a new tab?
    To get a link to open in a new tab then you would write: <a href="www.google.com" target="_blank">Google</a>
14. What is the alt attribute in the image tag used for? 
    The alt attribute is used to say what the description of the img is incase the browser or device doesn't render the image, then the user can read what the image is supposed to be.
15. How do I reference an id?
    To reference an id you woud write (in CSS) #whateverTheIdIs {}.
16. What is the difference between a section and a div?
    The difference between a section and a div is that div does not tell me what the meaning of it is, whereas a section does.
17. What is CSS used for? 
    CSS is used for styling your page.
18. How to we select an element? Example - every h2 on the page
    You would select an element by just typing out that element. For example, <h2> I would put h2 {} in my CSS.
19. What is the difference between a class and an id? - Give me an example of when I might use each one
    The difference between a class and id is that an id can be used only once per page. With class, you can put multiple classes on a element to get the desired style.
    For example, you would use an id on a div (<div id="">) and for class I would put in lists. An example for both would be a nav:
    <nav id="nav">
        <li class="same"><li>
        <li class="same"></li>
        <li class="same"></li>
    </nav>
20. How do we select classes in CSS?
    I would select a class by using .whateverClassYouUsed {}
21. How do we select a p element with a single class of “human”?
    I would select that element by writing: p.human {} , just incase I have used human anywhere else within my HTML.
22. What is a parent child selector? When would this be useful? 
    A parent child selector selects the elements that are the children of that parent. This is useful when doing hovers. For instance,
        h1:hover {
            color: black;
        }
23. How do you select all links within a div with the class of sidebar?
    You would select all the links within a div with a class of sidebar by:
    div .sidebar{}
24. What is a pseudo selector?
    A pseudo selector is a word that has been added to an element. For example:
    h1:hover {
            color: black;
        }
    This way you can change the hover color for the <h1>
25. What do we use the change the spacing between lines? (Do you mean "When do we change the line spacing?")
    If so, you use line-height: in CSS when you want control of how much space there is before and after a
    paragraph.
26. What do we use to change the spacing between letters?
    in CSS you would write:
    letter-spacing: 
27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
    To change everything to CAPITALS, you would use:
    text-transform: capitalize;
28. How do I add a 1px border around my div that is dotted and black?
    border: 1px dotted black;
29. How do I select everything on the page? 
    To select everything on a page you would either:
    Press Ctrl and A 
    or in CSS wrtite:
    * {
    box-sizing: border-box;
    margin: 0%;
    padding: 0%;
    }
30. How do I write a comment in CSS?
    To write a comment in CSS:
    /* */
31. How do I find out what file I am in, when I am using the command line?
    pwd is used to see which file/folder I am in.
32. Using the command line - how do I see a list of files/folders in my current folder?
    To see what file I am in I would type ls in the terminal this lists the files within the current folder that I am in.
33. How do I remove a file via the command line? Why do I have to be careful with this? 
    To remove a file via the terminal you would use rm and the name of the file to which you want to remove.
34. Why should I use version control?
    You should use version control to track different versions of the content that you are developing.
35. How often should I commit to github?
    You should commit as often as you need too, but make sure they are meaningful.
36. What is the command we would use to push our repo up to github? 
    You would use git push to push the repo to github.
37. Walk me through Lambda's git flow. 
    Fork the repo, add your TL as the collaborator, cone the repo so you can work on it, branch it using the 
    firstName-lastName format, complete the assignment, push the changes to your remote repo branch, then 
    create a pull request for grading of the assingment.
  
  Stretch Questions
  
1. What is the difference between an inline element and a block element?
    The difference between an inline and block element is:
    *Block: Will use the width of the parent element.
    *Inline: Cannot be inside the <body> and are nested in block elements.
2. What happens when an element is positioned absolutely? 
    When an element is positioned absolutely is it placed in a location specified.
3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 
    You would use display: flex in the CSS. Also, flex: 0 0 100%;
4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default
    Display Block By Default: <div>, <h1>, <p>      Display Inline By Default: <a>, <script>    Display Inline-Block By Default: <button> 
5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them? 
  The box model is the rules set around the HTML element. I would fix this in CSS by:
    * {
    box-sizing: border-box;
    margin: 0%;
    padding: 0%;
    }
  
< ------------------------------------------------------------------------------------------------------------------>

Stretch Git Tasks
- [ ] While the processes learned here will set you up to be successful in most situations, they are just the tip of the iceberg in learning Git. Independently research the following topics to learn more about Git.
  - [ ] Research and understand what a `merge conflict` is and how to resolve it.
  `merge conflict` is when you have a problem within the file. To resolve it: edit the file that is causing the conflict, and commit it.
  - [ ] Research the Git commands `pull`, `rebase`, `merge`. These commands will allow you to bring in changes that other developers push to the main branch.
  git pull downloads the newest changes in the repo and merges it with the local repo.
  git rebase integrates the changes from a branch to another one.
  git merge takes the lines of development and integrates them into one branch.
  - [ ] Research the Git commands `reset `, `revert`, `clean`. These commands will allow you to go back and amends previous commits you have made.
  git reset is to undo changes.
  git revert is to erase a previous commit.
  git clean cleans the working tree by removing the files that are not under the version control from the current directory.
- [ ] Research and set up a Graphical User Interface (GUI) Git console. 
  I have bash in terminal in VSC and I have the external bash.
- [ ] Research and setup SSH keys with GitHub, so that you do not need to input your username/password each time you push. 
  I have GitHub desktop and didn't need to do this according to the bash docs I read, but I did it anyways. I have the SSH key in GitHub, now.
     --> 